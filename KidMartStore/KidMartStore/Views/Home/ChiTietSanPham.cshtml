@model KidMartStore.Models.Product
@{
    ViewBag.Title = "Chi Tiết Sản Phẩm";
    Layout = "~/Views/Shared/UserLayout.cshtml";
}
<link rel="stylesheet" href="~/Content/CSS/_detailProduct.css" />
<div class="Details">
    <section class="Image-Product">
        <img src="~/Image/Product/@Model.Image" alt="@Model.Image" />
    </section>
    <section class="Information-product">
        <div class="Header-details">
            <div class="Name-product">
                <h2>@Model.Name</h2>
            </div>
            <div class="Icon-love">
                <img alt="Icon yêu thích" src="~/Image/Icons/icon-heart.png" />
            </div>
        </div>
        <div>
            <h3>Số lượng tồn kho: @Model.Quantity</h3>
            <h2>Giá bán: @Model.Price.ToString("N0") VNĐ</h2>
        </div>
        <div class="product-promotion">
            <h3 class="product-prodomtion-heading"><img src="~/Image/Icons/gift.png" /> KHUYẾN MÃI - ƯU ĐÃI</h3>
            <ul>
                <li>Chuyển khoản với đơn hàng từ 500k trở lên (Bắt buộc)</li>
                <li>Đồng giá ship toàn quốc 30k</li>
                <li>Hỗ trợ trả lời thắc mắc qua fanpage chính thức</li>
                <li>Khuyến mãi trực tiếp trên giá sản phẩm</li>
                <li>Đổi trả nếu sản phẩm lỗi bất kì</li>
            </ul>
        </div>
        <h3>Mã giảm: </h3>
        <h3>Kích cỡ: </h3>
        <div class="form-buy">
            @if (Model.Quantity > 0)
            {
                <div class="select">
                    <div class="frame1">
                        <div class="quantity">
                            <button class="minus">-</button>
                            <input type="text" id="quantity" value="1" max="@Model.Quantity">
                            <button class="plus">+</button>
                        </div>
                        <button class="AddToCart" onclick="addToCart('@Url.Action("AddToCart", "FunctionCart", new { id = Model.ID_Product })')">Thêm vào giỏ hàng</button>
                    </div>
                    <div class="btn-buy">
                        <button class="btn-buynow" onclick="buyNow('@Url.Action("AddToCart", "FunctionCart", new { id = Model.ID_Product })')">Mua Ngay</button>
                    </div>
                </div>
            }
            @if (Model.Quantity == 0)
            {
                <a style="color:red">Đã hết hàng!</a>
            }
        </div>
        <div class="content-another">
            <h3>Mô tả</h3>
            <h3>Chính sách giao hàng</h3>
            <h3>Chính sách đổi trả</h3>
        </div>
    </section>
</div>
<script>
    let maxQuantity = @Model.Quantity;

    document.querySelector(".minus").addEventListener("click", function () {
        let quantity = document.getElementById("quantity");
        let currentValue = parseInt(quantity.value);
        if (currentValue > 1) {
            quantity.value = currentValue - 1;
        } else {
            alert("Số lượng sản phẩm cần lớn hơn hoặc bằng 1");
        }
    });
    document.querySelector(".plus").addEventListener("click", function () {
        let quantity = document.getElementById("quantity");
        let currentValue = parseInt(quantity.value);

        if (currentValue < maxQuantity) {
            quantity.value = currentValue + 1;
        } else {
            alert("Sản phẩm này chỉ còn " + maxQuantity + " cái");
        }
    });

    document.getElementById("quantity").addEventListener("input", function () {
        let quantity = document.getElementById("quantity");
        let currentValue = parseInt(quantity.value);

        if (isNaN(currentValue) || currentValue < 1) {
            quantity.value = 1;
        } else if (currentValue > maxQuantity) {
            alert("Số lượng tối đa là " + maxQuantity + " sản phẩm!");
            quantity.value = maxQuantity;
        }
    });
</script>
<script>
    function addToCart(url) {
    let quantity = document.getElementById("quantity").value; // Lấy số lượng từ input
    let isLoggedIn = @((Session["ID_Customer"] != null).ToString().ToLower());

    if (!isLoggedIn) {
        alert("Bạn cần đăng nhập để mua hàng!");
        window.location.href = "@Url.Action("Login", "Account")";
        return;
    } else {
        fetch(url + "?quantity=" + quantity) // Gửi số lượng đến server
            .then(response => {
                if (response.ok) {
                    showTemporaryMessage("Bạn đã thêm " + quantity + " sản phẩm vào giỏ hàng!", 2000);
                } else {
                    alert("Có lỗi xảy ra, vui lòng thử lại!");
                }
            })
            .catch(error => {
                console.error("Lỗi:", error);
                alert("Có lỗi xảy ra, vui lòng thử lại!");
            });
    }
}

function showTemporaryMessage(message, duration) {
    let messageDiv = document.createElement("div");
    messageDiv.innerText = message;
    messageDiv.style.position = "fixed";
    messageDiv.style.top = "20%";
    messageDiv.style.left = "35%";
    messageDiv.style.transform = "translate(-50%, -50%)"; // Canh giữa màn hình
    messageDiv.style.backgroundColor = "none";
    messageDiv.style.color = "red";
    messageDiv.style.padding = "15px 30px";
    messageDiv.style.borderRadius = "8px";
    messageDiv.style.zIndex = "1000";
    messageDiv.style.fontSize = "18px";
    messageDiv.style.fontWeight = "bold";
    messageDiv.style.textAlign = "center";
    messageDiv.style.zIndex = "2000";

    document.body.appendChild(messageDiv);

    setTimeout(() => {
        messageDiv.remove();
    }, duration);
}

    function buyNow(url) {
        let quantity = document.getElementById("quantity").value;

        let isLoggedIn = @((Session["ID_Customer"] != null).ToString().ToLower());

        if (!isLoggedIn) {
            alert("Bạn cần đăng nhập để mua hàng!");
            window.location.href = "@Url.Action("Login", "Account")";
            return;
        }

        window.location.href = url + "?quantity=" + quantity;
    }
</script>


